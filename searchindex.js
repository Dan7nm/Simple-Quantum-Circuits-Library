Search.setIndex({"alltitles": {"API Reference": [[0, null]], "CNOT Gate (Controlled X Gate)": [[7, "cnot-gate-controlled-x-gate"]], "Cell Class": [[2, null]], "Circuit Class": [[3, null]], "Circuit Test Functions": [[4, null]], "Classical Register Class": [[1, null]], "Contents:": [[0, null], [8, null]], "Controlled Z Gate": [[7, "controlled-z-gate"]], "Example Usage:": [[3, "example-usage"]], "Gates Summary": [[7, "gates-summary"]], "H Gate (Hadamard Gate)": [[7, "h-gate-hadamard-gate"]], "I Gate (The identity gate)": [[7, "i-gate-the-identity-gate"]], "Introduction": [[8, "introduction"], [9, "Introduction"]], "Multi Qubit Class": [[5, null]], "MultiQubit Class": [[9, "MultiQubit-Class"]], "Prerequisites": [[9, "Prerequisites"]], "Quantum Circuit Class": [[9, "Quantum-Circuit-Class"]], "Quantum Circuits Tests": [[9, "Quantum-Circuits-Tests"]], "Quantum Gates": [[7, null]], "Qubit Class": [[6, null]], "Qubit class": [[9, "Qubit-class"]], "R Gate (Phase Shift Gate)": [[7, "r-gate-phase-shift-gate"]], "SQCL Quickstart Notebook": [[9, null]], "Simple Quantum Circuits Library": [[8, null]], "Single Qubit Gates": [[7, "single-qubit-gates"]], "Steps for circuit building:": [[3, "steps-for-circuit-building"]], "Swap Gate": [[7, "swap-gate"]], "Two Qubit Gates": [[7, "two-qubit-gates"]], "X Gate (Pauli-X)": [[7, "x-gate-pauli-x"]], "Y Gate (Pauli-Y)": [[7, "y-gate-pauli-y"]], "Z Gate (Pauli-Z)": [[7, "z-gate-pauli-z"]]}, "docnames": ["api", "api/c_register", "api/cell", "api/circuit", "api/circuit_test", "api/multi_qubit", "api/qubit", "gates", "index", "jupyter_notebook/quickstart"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["api.rst", "api/c_register.rst", "api/cell.rst", "api/circuit.rst", "api/circuit_test.rst", "api/multi_qubit.rst", "api/qubit.rst", "gates.rst", "index.rst", "jupyter_notebook/quickstart.ipynb"], "indexentries": {"add_conditional_gate() (circuit.quantumcircuit method)": [[3, "circuit.QuantumCircuit.add_conditional_gate", false]], "add_controlled_qubit_gate() (circuit.quantumcircuit method)": [[3, "circuit.QuantumCircuit.add_controlled_qubit_gate", false]], "add_layer() (circuit.quantumcircuit method)": [[3, "circuit.QuantumCircuit.add_layer", false]], "add_measure_gate() (circuit.quantumcircuit method)": [[3, "circuit.QuantumCircuit.add_measure_gate", false]], "add_qubit() (multi_qubit.multiqubit method)": [[5, "multi_qubit.MultiQubit.add_qubit", false]], "add_single_qubit_gate() (circuit.quantumcircuit method)": [[3, "circuit.QuantumCircuit.add_single_qubit_gate", false]], "add_swap_gate() (circuit.quantumcircuit method)": [[3, "circuit.QuantumCircuit.add_swap_gate", false]], "apply_conditional_gate() (cell.quantumcircuitcell method)": [[2, "cell.QuantumCircuitCell.apply_conditional_gate", false]], "apply_matrix() (cell.quantumcircuitcell method)": [[2, "cell.QuantumCircuitCell.apply_matrix", false]], "c_register": [[1, "module-c_register", false]], "cell": [[2, "module-cell", false]], "change_number_of_bits() (c_register.classicalregister method)": [[1, "c_register.ClassicalRegister.change_number_of_bits", false]], "circuit": [[3, "module-circuit", false]], "circuit_test": [[4, "module-circuit_test", false]], "classicalregister (class in c_register)": [[1, "c_register.ClassicalRegister", false]], "conditional_gate_input() (cell.quantumcircuitcell method)": [[2, "cell.QuantumCircuitCell.conditional_gate_input", false]], "device_in_use() (circuit.quantumcircuit method)": [[3, "circuit.QuantumCircuit.device_in_use", false]], "draw_circuit() (circuit.quantumcircuit method)": [[3, "circuit.QuantumCircuit.draw_circuit", false]], "get_alpha() (qubit.qubit method)": [[6, "qubit.Qubit.get_alpha", false]], "get_array() (circuit.quantumcircuit method)": [[3, "circuit.QuantumCircuit.get_array", false]], "get_beta() (qubit.qubit method)": [[6, "qubit.Qubit.get_beta", false]], "get_bits_num() (c_register.classicalregister method)": [[1, "c_register.ClassicalRegister.get_bits_num", false]], "get_circuit_operator_matrix() (circuit.quantumcircuit method)": [[3, "circuit.QuantumCircuit.get_circuit_operator_matrix", false]], "get_control_index() (cell.quantumcircuitcell method)": [[2, "cell.QuantumCircuitCell.get_control_index", false]], "get_gate_type() (cell.quantumcircuitcell method)": [[2, "cell.QuantumCircuitCell.get_gate_type", false]], "get_matrix() (cell.quantumcircuitcell method)": [[2, "cell.QuantumCircuitCell.get_matrix", false]], "get_number_of_compatible_qubits() (circuit.quantumcircuit method)": [[3, "circuit.QuantumCircuit.get_number_of_compatible_qubits", false]], "get_number_of_layers() (circuit.quantumcircuit method)": [[3, "circuit.QuantumCircuit.get_number_of_layers", false]], "get_number_of_qubits() (multi_qubit.multiqubit method)": [[5, "multi_qubit.MultiQubit.get_number_of_qubits", false]], "get_qubit() (multi_qubit.multiqubit method)": [[5, "multi_qubit.MultiQubit.get_qubit", false]], "get_target_index() (cell.quantumcircuitcell method)": [[2, "cell.QuantumCircuitCell.get_target_index", false]], "get_tensor_vector() (multi_qubit.multiqubit method)": [[5, "multi_qubit.MultiQubit.get_tensor_vector", false]], "get_vector() (qubit.qubit method)": [[6, "qubit.Qubit.get_vector", false]], "is_classical_bit() (cell.quantumcircuitcell method)": [[2, "cell.QuantumCircuitCell.is_classical_bit", false]], "is_conditional_gate() (cell.quantumcircuitcell method)": [[2, "cell.QuantumCircuitCell.is_conditional_gate", false]], "is_control_gate() (cell.quantumcircuitcell method)": [[2, "cell.QuantumCircuitCell.is_control_gate", false]], "is_measure_gate() (cell.quantumcircuitcell method)": [[2, "cell.QuantumCircuitCell.is_measure_gate", false]], "is_single_qubit_gate() (cell.quantumcircuitcell method)": [[2, "cell.QuantumCircuitCell.is_single_qubit_gate", false]], "is_swap_gate() (cell.quantumcircuitcell method)": [[2, "cell.QuantumCircuitCell.is_swap_gate", false]], "load_qft_preset() (circuit.quantumcircuit method)": [[3, "circuit.QuantumCircuit.load_qft_preset", false]], "measure() (cell.quantumcircuitcell method)": [[2, "cell.QuantumCircuitCell.measure", false]], "measure() (multi_qubit.multiqubit method)": [[5, "multi_qubit.MultiQubit.measure", false]], "measure() (qubit.qubit method)": [[6, "qubit.Qubit.measure", false]], "measure_all() (circuit.quantumcircuit method)": [[3, "circuit.QuantumCircuit.measure_all", false]], "measure_qubit() (multi_qubit.multiqubit method)": [[5, "multi_qubit.MultiQubit.measure_qubit", false]], "module": [[1, "module-c_register", false], [2, "module-cell", false], [3, "module-circuit", false], [4, "module-circuit_test", false], [5, "module-multi_qubit", false], [6, "module-qubit", false]], "multi_qubit": [[5, "module-multi_qubit", false]], "multiqubit (class in multi_qubit)": [[5, "multi_qubit.MultiQubit", false]], "normal_pdf() (in module circuit_test)": [[4, "circuit_test.normal_pdf", false]], "plot_amplitudes() (multi_qubit.multiqubit method)": [[5, "multi_qubit.MultiQubit.plot_amplitudes", false]], "plot_measurements() (multi_qubit.multiqubit method)": [[5, "multi_qubit.MultiQubit.plot_measurements", false]], "plot_probabilities() (multi_qubit.multiqubit method)": [[5, "multi_qubit.MultiQubit.plot_probabilities", false]], "print_c_reg() (c_register.classicalregister method)": [[1, "c_register.ClassicalRegister.print_c_reg", false]], "print_matrix() (cell.quantumcircuitcell method)": [[2, "cell.QuantumCircuitCell.print_matrix", false]], "print_operator_matrix() (circuit.quantumcircuit method)": [[3, "circuit.QuantumCircuit.print_operator_matrix", false]], "print_qubit() (qubit.qubit method)": [[6, "qubit.Qubit.print_qubit", false]], "print_tensor_form() (multi_qubit.multiqubit method)": [[5, "multi_qubit.MultiQubit.print_tensor_form", false]], "print_vector_form() (multi_qubit.multiqubit method)": [[5, "multi_qubit.MultiQubit.print_vector_form", false]], "print_vector_form() (qubit.qubit method)": [[6, "qubit.Qubit.print_vector_form", false]], "qft_on_gaussian() (in module circuit_test)": [[4, "circuit_test.qft_on_gaussian", false]], "qft_on_sine() (in module circuit_test)": [[4, "circuit_test.qft_on_sine", false]], "quantumcircuit (class in circuit)": [[3, "circuit.QuantumCircuit", false]], "quantumcircuitcell (class in cell)": [[2, "cell.QuantumCircuitCell", false]], "qubit": [[6, "module-qubit", false]], "qubit (class in qubit)": [[6, "qubit.Qubit", false]], "remove_layer() (circuit.quantumcircuit method)": [[3, "circuit.QuantumCircuit.remove_layer", false]], "remove_single_qubit_gate() (circuit.quantumcircuit method)": [[3, "circuit.QuantumCircuit.remove_single_qubit_gate", false]], "remove_two_qubit_gate() (circuit.quantumcircuit method)": [[3, "circuit.QuantumCircuit.remove_two_qubit_gate", false]], "reset_circuit() (circuit.quantumcircuit method)": [[3, "circuit.QuantumCircuit.reset_circuit", false]], "run_circuit() (circuit.quantumcircuit method)": [[3, "circuit.QuantumCircuit.run_circuit", false]], "set_amplitudes() (qubit.qubit method)": [[6, "qubit.Qubit.set_amplitudes", false]], "set_classical_bit() (cell.quantumcircuitcell method)": [[2, "cell.QuantumCircuitCell.set_classical_bit", false]], "set_conditional_gate() (cell.quantumcircuitcell method)": [[2, "cell.QuantumCircuitCell.set_conditional_gate", false]], "set_controlled_qubit_gate() (cell.quantumcircuitcell method)": [[2, "cell.QuantumCircuitCell.set_controlled_qubit_gate", false]], "set_measure_gate() (cell.quantumcircuitcell method)": [[2, "cell.QuantumCircuitCell.set_measure_gate", false]], "set_single_qubit_gate() (cell.quantumcircuitcell method)": [[2, "cell.QuantumCircuitCell.set_single_qubit_gate", false]], "set_swap_gate() (cell.quantumcircuitcell method)": [[2, "cell.QuantumCircuitCell.set_swap_gate", false]], "str_to_state() (multi_qubit.multiqubit method)": [[5, "multi_qubit.MultiQubit.str_to_state", false]], "test_qft_matrix_output() (in module circuit_test)": [[4, "circuit_test.test_qft_matrix_output", false]], "test_tracing_out_qubit() (in module circuit_test)": [[4, "circuit_test.test_tracing_out_qubit", false]]}, "objects": {"": [[1, 0, 0, "-", "c_register"], [2, 0, 0, "-", "cell"], [3, 0, 0, "-", "circuit"], [4, 0, 0, "-", "circuit_test"], [5, 0, 0, "-", "multi_qubit"], [6, 0, 0, "-", "qubit"]], "c_register": [[1, 1, 1, "", "ClassicalRegister"]], "c_register.ClassicalRegister": [[1, 2, 1, "", "change_number_of_bits"], [1, 2, 1, "", "get_bits_num"], [1, 2, 1, "", "print_c_reg"]], "cell": [[2, 1, 1, "", "QuantumCircuitCell"]], "cell.QuantumCircuitCell": [[2, 2, 1, "", "apply_conditional_gate"], [2, 2, 1, "", "apply_matrix"], [2, 2, 1, "", "conditional_gate_input"], [2, 2, 1, "", "get_control_index"], [2, 2, 1, "", "get_gate_type"], [2, 2, 1, "", "get_matrix"], [2, 2, 1, "", "get_target_index"], [2, 2, 1, "", "is_classical_bit"], [2, 2, 1, "", "is_conditional_gate"], [2, 2, 1, "", "is_control_gate"], [2, 2, 1, "", "is_measure_gate"], [2, 2, 1, "", "is_single_qubit_gate"], [2, 2, 1, "", "is_swap_gate"], [2, 2, 1, "", "measure"], [2, 2, 1, "", "print_matrix"], [2, 2, 1, "", "set_classical_bit"], [2, 2, 1, "", "set_conditional_gate"], [2, 2, 1, "", "set_controlled_qubit_gate"], [2, 2, 1, "", "set_measure_gate"], [2, 2, 1, "", "set_single_qubit_gate"], [2, 2, 1, "", "set_swap_gate"]], "circuit": [[3, 1, 1, "", "QuantumCircuit"]], "circuit.QuantumCircuit": [[3, 2, 1, "", "add_conditional_gate"], [3, 2, 1, "", "add_controlled_qubit_gate"], [3, 2, 1, "", "add_layer"], [3, 2, 1, "", "add_measure_gate"], [3, 2, 1, "", "add_single_qubit_gate"], [3, 2, 1, "", "add_swap_gate"], [3, 2, 1, "", "device_in_use"], [3, 2, 1, "", "draw_circuit"], [3, 2, 1, "", "get_array"], [3, 2, 1, "", "get_circuit_operator_matrix"], [3, 2, 1, "", "get_number_of_compatible_qubits"], [3, 2, 1, "", "get_number_of_layers"], [3, 2, 1, "", "load_qft_preset"], [3, 2, 1, "", "measure_all"], [3, 2, 1, "", "print_operator_matrix"], [3, 2, 1, "", "remove_layer"], [3, 2, 1, "", "remove_single_qubit_gate"], [3, 2, 1, "", "remove_two_qubit_gate"], [3, 2, 1, "", "reset_circuit"], [3, 2, 1, "", "run_circuit"]], "circuit_test": [[4, 3, 1, "", "normal_pdf"], [4, 3, 1, "", "qft_on_gaussian"], [4, 3, 1, "", "qft_on_sine"], [4, 3, 1, "", "test_qft_matrix_output"], [4, 3, 1, "", "test_tracing_out_qubit"]], "multi_qubit": [[5, 1, 1, "", "MultiQubit"]], "multi_qubit.MultiQubit": [[5, 2, 1, "", "add_qubit"], [5, 2, 1, "", "get_number_of_qubits"], [5, 2, 1, "", "get_qubit"], [5, 2, 1, "", "get_tensor_vector"], [5, 2, 1, "", "measure"], [5, 2, 1, "", "measure_qubit"], [5, 2, 1, "", "plot_amplitudes"], [5, 2, 1, "", "plot_measurements"], [5, 2, 1, "", "plot_probabilities"], [5, 2, 1, "", "print_tensor_form"], [5, 2, 1, "", "print_vector_form"], [5, 2, 1, "", "str_to_state"]], "qubit": [[6, 1, 1, "", "Qubit"]], "qubit.Qubit": [[6, 2, 1, "", "get_alpha"], [6, 2, 1, "", "get_beta"], [6, 2, 1, "", "get_vector"], [6, 2, 1, "", "measure"], [6, 2, 1, "", "print_qubit"], [6, 2, 1, "", "print_vector_form"], [6, 2, 1, "", "set_amplitudes"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "terms": {"": [1, 4, 7, 9], "0": [2, 3, 4, 5, 6, 7, 9], "00": [2, 7, 9], "000": 9, "0000": [5, 9], "00000": 9, "00001": 9, "0001": [5, 9], "00010": 9, "00011": 9, "001": 9, "0010": [5, 9], "00100": 9, "00101": 9, "0011": [5, 9], "00110": 9, "00111": 9, "00j": 2, "01": [5, 7, 9], "010": 9, "0100": 9, "01000": 9, "01001": 9, "0101": 9, "01010": 9, "01011": 9, "011": 9, "0110": 9, "01100": 9, "01101": 9, "0111": 9, "01110": 9, "01111": 9, "03": 9, "03449": 9, "03449j": 9, "06765": 9, "06765j": 9, "09821": 9, "09821j": 9, "1": [1, 2, 3, 4, 5, 6, 7, 9], "10": [7, 9], "100": 9, "1000": 9, "10000": [5, 9], "10001": 9, "1001": 9, "10010": 9, "10011": 9, "101": 9, "1010": 9, "10100": 9, "10101": 9, "1011": 9, "10110": 9, "10111": 9, "11": [7, 9], "110": 9, "1100": 9, "11000": 9, "11001": 9, "1101": 9, "11010": 9, "11011": [3, 9], "111": 9, "1110": 9, "11100": [3, 9], "11101": 9, "1111": 9, "11110": 9, "11111": 9, "125": 9, "125j": 9, "147": 9, "147j": 9, "16": [5, 9], "1633": 9, "1633j": 9, "16489014e": 9, "17": 9, "1734": 9, "1734j": 9, "1768": 9, "1768j": 9, "1j": 9, "2": [2, 3, 7, 9], "25": 9, "2514449644248415": 9, "25j": 9, "27": 9, "3": [3, 4, 9], "300": 9, "35": 9, "35355339j": 9, "3536": 9, "3536j": 9, "36": [6, 9], "37": 9, "38": 9, "39": 9, "4": [3, 5, 9], "40": 9, "41": 9, "42": 9, "43": 9, "44": 9, "45": 9, "46": 9, "47": 9, "48": 9, "49": 9, "5": [5, 9], "50": 9, "50000000e": 9, "51": 9, "52": 9, "53": 9, "53553391e": 9, "54": 9, "55": 9, "56": 9, "57": 9, "5703237432307373": 9, "5703237432307374": 9, "58": 9, "59": 9, "6": [6, 9], "60": 9, "61": 9, "62": 9, "63": 9, "64": [6, 9], "65": 9, "66": 9, "67": 9, "68": 9, "7": 9, "7071": 9, "70710678": 9, "71": 9, "78": 9, "8": [6, 9], "8214200070045042": 9, "8214200070045043": 9, "866": 9, "87": 9, "9678715978193544": 9, "A": [1, 2, 3, 4, 5, 6, 8], "And": 7, "As": 9, "By": 9, "For": 7, "If": [2, 3, 5, 6, 7, 9], "In": [7, 9], "It": [4, 5, 7, 8], "NOT": [7, 9], "The": [1, 2, 3, 4, 5, 6, 8, 9], "Then": [5, 9], "There": 9, "To": 9, "__number_of_qubit": 5, "__qubit_vector": 6, "__tensor_vector": 5, "_scalartype_co": 3, "abov": 9, "accordingli": 5, "act": [2, 7, 9], "action": 9, "actual": 9, "ad": [3, 5, 9], "add": [3, 5, 7, 9], "add_conditional_g": 3, "add_controlled_qubit_g": [3, 9], "add_lay": [3, 9], "add_measure_g": 3, "add_qubit": [3, 4, 5, 9], "add_single_qubit_g": [3, 9], "add_swap_g": [3, 9], "affect": 7, "after": [2, 3, 4, 5, 7, 9], "algorithm": 7, "all": [0, 3, 5, 9], "allow": [2, 3, 5, 7, 8, 9], "along": 5, "alpha": [6, 9], "alreadi": [3, 9], "also": [4, 7, 9], "ampitud": 9, "amplitud": [4, 5, 6, 9], "an": [2, 4, 5, 7, 9], "angl": [2, 3], "ani": [2, 3, 4, 5, 6, 9], "anoth": [7, 9], "api": 8, "appli": [2, 3, 4, 7, 9], "applid": 3, "apply_circuit": 3, "apply_conditional_g": 2, "apply_matrix": 2, "ar": [2, 3, 4, 5, 6, 9], "arbitrari": 7, "argument": [5, 9], "arrai": [1, 3, 5, 9], "assert": 4, "assign": 9, "assum": 4, "axi": [3, 9], "backend": 9, "bar": [5, 9], "base": [1, 2, 3, 4, 5, 6, 7], "basi": [3, 5, 6, 7, 9], "basic": 8, "becaus": 9, "been": 9, "befor": [4, 9], "begin": [7, 9], "beta": [6, 9], "better": 2, "between": [2, 3, 5, 6, 7, 9], "bit": [1, 2, 3, 5, 6], "bool": [2, 3, 4, 5], "boolean": [2, 4, 5], "both": [3, 5], "build": [8, 9], "built": [8, 9], "c_reg": [2, 3], "c_reg_index": [2, 3], "c_reg_int": [2, 3], "c_regist": 1, "calcul": [4, 6], "call": 5, "can": [2, 3, 5, 7, 9], "case": [7, 9], "caus": 9, "cd": 9, "cdot": 9, "cell": [0, 3, 8, 9], "chang": [1, 2, 5, 7, 9], "change_number_of_bit": 1, "chart": 5, "chdir": 9, "check": [2, 4, 9], "choos": 9, "chosen": 3, "circl": 9, "circuit": [0, 2, 5, 7], "circuit_test": [4, 9], "class": [0, 4, 8], "classic": [0, 2, 3, 7, 8, 9], "classical_bit": 2, "classicalregist": [1, 2, 3], "clear": 3, "cli": [3, 9], "click": 9, "clone": 9, "close": 2, "closer": 9, "coeffici": 5, "colab": 9, "colab_cell_execut": 9, "collaps": [2, 3, 5, 6, 9], "collpas": 9, "column": [3, 9], "com": 9, "combin": 7, "command": 9, "commonli": 7, "compar": [4, 9], "compat": 3, "complex": [2, 5, 6, 9], "complex128": [2, 3, 5, 6], "compromis": [3, 9], "comput": [1, 3, 5, 6, 7, 8, 9], "compute_circuit": 3, "condit": [2, 3, 6, 9], "conditional_gate_input": 2, "configur": 2, "confirm": 4, "connect": [2, 9], "consecut": 9, "consol": 1, "construct": [5, 7, 9], "contain": 5, "content": 9, "control": [2, 3, 9], "control_qubit": [2, 3], "convert": 5, "correct": [4, 9], "correctli": 4, "correspond": [2, 3, 5, 6, 9], "count": 9, "coupl": 9, "creat": 7, "crown": 9, "crucial": 7, "cu": 7, "current": [1, 2], "cx": 3, "cz": 7, "dan7nm": 9, "debug": 9, "default": [3, 4, 5, 9], "defin": [7, 9], "delta": 9, "denot": 7, "densiti": 4, "depend": 2, "describ": [3, 6, 7, 9], "design": 3, "desir": [2, 5, 9], "determin": [6, 9], "deviat": 4, "devic": 3, "device_in_us": 3, "diagram": 3, "differ": [3, 9], "dimension": [3, 9], "dirac": [5, 7, 9], "directli": [5, 9], "directori": 9, "discuss": 9, "displai": [1, 5], "distribut": [4, 6, 9], "divid": 5, "do": 6, "doe": [4, 7], "doesn": 7, "don": 2, "done": [3, 9], "dot": 7, "draw_circuit": [3, 9], "dtype": [2, 3, 5, 6], "due": [3, 9], "dynam": [3, 9], "e": [2, 7, 9], "each": [3, 4, 5, 6, 7, 9], "earlier": 9, "easier": 9, "easili": 9, "effect": 7, "either": 5, "els": 9, "emerg": 7, "empti": 3, "end": [3, 7, 9], "entir": [3, 5], "equal": [7, 9], "equat": 9, "equival": 5, "error": 9, "evalu": 4, "everi": [3, 9], "exact": [2, 3], "exampl": [2, 4, 5, 6, 7, 9], "except": 9, "exchang": 7, "execut": 9, "exp": 6, "expect": [2, 4, 9], "experi": 7, "explain": 9, "extract": 5, "f": 5, "factor": 7, "fals": [2, 3, 4, 5, 9], "fashion": 9, "faster": 9, "featur": 9, "few": 9, "fft": 4, "final": [3, 9], "finish": 3, "first": [2, 3, 7, 9], "first_qubit": [2, 3, 9], "flag": 9, "flip": 7, "float": [2, 3, 4, 9], "float64": 5, "follow": [7, 9], "form": [3, 5, 6, 8, 9], "format": [2, 5], "fourier": [3, 4, 7, 8, 9], "frac": [7, 9], "from": [3, 5, 7, 9], "full": [5, 9], "function": [0, 2, 3, 5, 8, 9], "fundament": [7, 8, 9], "g": 2, "gate": [2, 3, 8, 9], "gate_typ": [2, 3], "gaussian": 4, "gener": [4, 7], "get": [2, 5, 9], "get_alpha": [4, 6, 9], "get_arrai": 3, "get_beta": [4, 6, 9], "get_bits_num": 1, "get_circuit_operator_matrix": 3, "get_control_index": 2, "get_gate_typ": 2, "get_matrix": 2, "get_number_of_compatible_qubit": 3, "get_number_of_lay": 3, "get_number_of_qubit": [5, 9], "get_qubit": [4, 5, 9], "get_target_index": 2, "get_tensor_vector": [5, 9], "get_vector": [6, 9], "getcwd": 9, "getter": 9, "git": 9, "github": [8, 9], "give": 9, "given": [3, 5, 6, 9], "global": 9, "googl": 9, "got": [5, 9], "gpu": 9, "graph": [5, 9], "h": [2, 3, 9], "ha": [3, 4, 9], "hadamard": 9, "handl": 4, "have": 9, "here": [7, 9], "higher": 9, "horizont": [3, 9], "how": [7, 9], "howev": 7, "http": 9, "i": [2, 3, 4, 5, 6, 8, 9], "ident": [2, 3, 9], "imaginari": 7, "implement": [5, 8, 9], "import": [7, 9], "importerror": 9, "inaccuraci": 9, "includ": [3, 6, 7], "index": [2, 3, 5, 9], "indic": [2, 3, 9], "individu": 4, "initi": [2, 3, 4, 9], "initializiton": 9, "input": [2, 3, 4, 5, 7, 9], "input_st": [2, 3], "input_str": 5, "insid": 5, "instal": 9, "int": [1, 2, 3, 4, 5, 6], "intact": 2, "integ": 5, "interfer": 7, "interv": [6, 9], "intial": 9, "introduc": [7, 9], "invalid": [2, 3], "invers": 7, "is_classical_bit": 2, "is_conditional_g": 2, "is_control_g": 2, "is_measure_g": 2, "is_single_qubit_g": 2, "is_swap_g": 2, "iter": [3, 9], "its": [1, 3, 4], "j": [7, 9], "jewel": 9, "jupyt": [8, 9], "just": 2, "keep": 2, "know": 9, "known": 7, "kroreck": 3, "l": 7, "langl": 7, "larg": 9, "last": [3, 9], "lastli": 9, "later": 9, "layer": [3, 9], "layer_index": [3, 9], "learn": 8, "leav": 7, "left": [3, 9], "let": 9, "librari": [0, 7, 9], "like": [4, 7], "line": [3, 5, 9], "link": 8, "list": [0, 4, 5], "load": [3, 9], "load_qft_preset": [3, 9], "local": 9, "local_cell_execut": 9, "lost": 9, "m": [2, 7, 9], "machin": 9, "maintain": 5, "mani": [5, 7, 9], "manipul": [5, 7], "match": 4, "math": 7, "matplotlib": [3, 9], "matric": [3, 9], "matrix": [2, 3, 4, 7, 9], "maximum": 4, "mean": [4, 7], "measur": [2, 3, 4, 5, 6, 9], "measure_al": 3, "measure_qubit": [5, 9], "mesur": [5, 9], "method": [1, 2, 3, 4, 5, 9], "minu": 7, "mn": 9, "more": 9, "most": 7, "move": 3, "mt": [3, 5, 9], "mu": 4, "multi": [0, 2, 4, 8, 9], "multi_qubit": [5, 9], "multipl": [4, 5, 9], "multipli": 3, "multiqubit": [2, 3, 4, 5, 8], "multqubit": 5, "must": 9, "mutlipl": 9, "n": [7, 9], "ndarrai": [2, 3, 4, 5, 6], "need": [7, 9], "neg": 2, "new": [1, 3, 5], "new_qubit": 5, "next": [3, 9], "non": [2, 3, 6], "none": [1, 2, 3, 4, 5, 6], "normal": [4, 6, 9], "normal_pdf": 4, "notat": [5, 7], "note": [4, 6, 9], "notebook": 8, "now": 9, "np": [2, 4, 5, 6, 9], "num_bit": 1, "num_of_lay": 3, "num_of_measur": [5, 9], "number": [1, 2, 3, 4, 5, 6, 7, 9], "number_of_compatible_qubit": 3, "number_of_measur": 5, "number_of_qubit": [3, 4, 9], "numpi": [4, 9], "o": 9, "object": [1, 2, 3, 5, 6, 9], "occupi": 3, "one": [2, 3, 4, 5, 9], "onli": [2, 6, 7, 9], "oper": [2, 4, 5, 7, 9], "opert": 2, "oppos": 3, "option": [2, 3, 4, 5], "order": 9, "ordinari": 2, "origin": [4, 9], "other": [2, 3, 5], "otherwis": [2, 9], "otherwiss": 2, "otim": 7, "ouput": 9, "out": [4, 5, 9], "outcom": [5, 6], "output": [2, 5, 6, 7, 9], "own": 9, "p": [2, 3, 9], "page": 0, "param": 3, "paramet": [1, 2, 3, 4, 5, 6], "partial": 5, "particular": [3, 5], "pass": 9, "path": 9, "pattern": 7, "pdf": 4, "perform": [2, 3, 4, 9], "phase": [2, 3, 6, 9], "phi": [2, 3, 7], "phi_": 6, "pi": [2, 9], "pip": 9, "plai": 7, "plot": [4, 5, 9], "plot_amplitud": [5, 9], "plot_measur": [5, 9], "plot_prob": [5, 9], "plot_typ": [5, 9], "plu": 7, "pmatrix": 7, "point": [3, 4], "possibl": [3, 6], "prebuild": 3, "prerequisit": 8, "preserv": 4, "preset": 9, "print": [1, 2, 3, 4, 5, 6, 9], "print_amplitud": [4, 9], "print_c_reg": 1, "print_matrix": 2, "print_operator_matrix": [3, 9], "print_qubit": [6, 9], "print_tensor_form": [3, 4, 5, 9], "print_vector_form": [5, 6, 9], "probabilit": 9, "probabilti": 9, "probabl": [4, 5, 6, 9], "process": 4, "product": [3, 5, 7, 9], "proivid": 3, "project": [5, 7, 8, 9], "properti": 7, "provid": [2, 3, 8], "python": 9, "pytorch": 9, "q0": [3, 5, 9], "q1": [3, 5, 9], "q2": [3, 9], "q3": 3, "q4": 3, "qft": [3, 4, 7, 9], "qft_": 9, "qft_on_gaussian": 4, "qft_on_sin": [4, 9], "quantum": [1, 2, 3, 4, 5, 6], "quantumcircuit": [3, 9], "quantumcircuitcel": 2, "qubit": [0, 2, 3, 4, 8], "qubit_index": [3, 5, 9], "qubits_to_test": [4, 9], "quickstart": 8, "qunatum": 9, "r_": 7, "radian": [2, 7], "rais": [2, 3, 5, 6, 9], "random": [4, 6, 9], "rang": [5, 9], "rangl": 7, "readabl": [2, 9], "real": 9, "rearrang": 7, "reccomend": 9, "reciev": [2, 9], "recommend": 8, "refer": 8, "regist": [0, 2, 3, 8], "regular": [3, 5], "rel": 6, "remain": [4, 7], "rememb": 9, "remov": [3, 9], "remove_lay": [3, 9], "remove_single_qubit_g": [3, 9], "remove_two_qubit_g": [3, 9], "repeat": 3, "repositori": 8, "repres": [1, 2, 3, 5, 6], "represent": [2, 4, 5, 7], "rerun": 9, "reset": [1, 3, 9], "reset_circuit": [3, 9], "respect": 9, "result": [2, 3, 4, 5, 6, 9], "retriev": 4, "return": [1, 2, 3, 4, 5, 6, 9], "return_as_str": 5, "return_v": 2, "right": [3, 9], "role": 7, "rotat": 2, "round": 2, "row": [3, 9], "rtype": [2, 3], "run": [3, 9], "run_circuit": [3, 9], "runtim": 9, "same": 9, "satisfi": 6, "save": [2, 3, 9], "saw": 9, "script": 9, "se": 9, "second": [2, 3, 7, 9], "second_qubit": [2, 3, 9], "section": 9, "see": 9, "self": 5, "set": [2, 6, 9], "set_amplitud": [6, 9], "set_classical_bit": 2, "set_conditional_g": 2, "set_controlled_qubit_g": 2, "set_measure_g": 2, "set_single_qubit_g": 2, "set_swap_g": 2, "setup": 9, "should": [2, 3, 5, 6], "show": 9, "sigma": 4, "sign": 7, "similar": 9, "similarli": [7, 9], "simpl": 9, "simul": [6, 9], "sine": [4, 9], "singl": [2, 3, 5, 8, 9], "situat": 9, "small": 8, "some": 7, "sometim": 7, "specif": [5, 9], "specifi": [2, 3, 5, 9], "sqcl": 8, "sqrt": [7, 9], "squar": 6, "src": 9, "standard": [4, 7], "start": 8, "state": [1, 2, 3, 4, 5, 6, 7, 9], "step": 9, "store": [2, 3, 4], "str": [2, 3, 5], "str_to_stat": 5, "string": 5, "sum": 5, "sum_": 7, "summari": 8, "superposit": 7, "support": 3, "swap": [2, 3, 9], "swap_": 7, "system": [2, 5, 7, 9], "t": [2, 7], "tab": 9, "tabl": 7, "target": [2, 3, 7, 9], "target_qubit": [2, 3, 9], "tensor": [3, 5, 7, 9], "term": 6, "test": [0, 8], "test_qft_matrix_output": [4, 9], "test_tracing_out_qubit": [4, 9], "text": [7, 9], "th": 7, "than": [3, 7, 9], "them": [4, 9], "theori": 9, "thi": [0, 1, 2, 3, 4, 5, 7, 8, 9], "through": 7, "throw": 9, "thu": [5, 7], "time": [5, 9], "took": 9, "torch": 9, "torchaudio": 9, "torchvis": 9, "total": 9, "trace": [4, 5, 9], "tradit": 3, "transform": [3, 4, 7, 8, 9], "true": [2, 3, 5, 9], "truth": 7, "try": 9, "tupl": 5, "two": [3, 6, 8, 9], "type": [1, 2, 3, 4, 5, 6, 9], "typeerror": 5, "u": [7, 9], "u_": 7, "unchang": [4, 7], "uniform": [6, 9], "unitari": [2, 3, 7, 9], "unlik": 7, "unread": 9, "up": 2, "updat": [2, 5], "us": [0, 2, 3, 4, 6, 7, 9], "useful": 9, "valid": [3, 5], "valu": [1, 2, 3, 4, 6, 7, 9], "valueerror": [2, 3, 5, 6, 9], "variabl": [3, 5, 6], "variou": 7, "vector": [5, 6, 9], "verifi": 4, "versa": 7, "versatil": 2, "version": 9, "vertic": [3, 9], "vice": 7, "visual": [3, 9], "wa": [3, 9], "wai": 9, "want": [5, 9], "we": [2, 3, 5, 7, 9], "what": 9, "when": [7, 9], "where": [3, 4, 7, 9], "which": [2, 3, 5, 9], "while": 7, "whole": [2, 3, 9], "whose": 5, "wire": 3, "wise": 2, "wish": 5, "within": 7, "without": [3, 5, 9], "won": 2, "work": [4, 8], "worri": 9, "x": [2, 3, 4, 9], "x_1": 7, "x_2": 7, "x_i": 7, "x_j": 7, "x_n": 7, "y": [2, 3, 9], "you": [3, 9], "your": 9, "z": [2, 3, 9], "zero": [1, 2, 6, 9], "\u03b1": 6, "\u03b2": 6, "\u03c0": 7, "\u03c6": 7}, "titles": ["API Reference", "Classical Register Class", "Cell Class", "Circuit Class", "Circuit Test Functions", "Multi Qubit Class", "Qubit Class", "Quantum Gates", "Simple Quantum Circuits Library", "SQCL Quickstart Notebook"], "titleterms": {"The": 7, "api": 0, "build": 3, "cell": 2, "circuit": [3, 4, 8, 9], "class": [1, 2, 3, 5, 6, 9], "classic": 1, "cnot": 7, "content": [0, 8], "control": 7, "exampl": 3, "function": 4, "gate": 7, "h": 7, "hadamard": 7, "i": 7, "ident": 7, "introduct": [8, 9], "librari": 8, "multi": 5, "multiqubit": 9, "notebook": 9, "pauli": 7, "phase": 7, "prerequisit": 9, "quantum": [7, 8, 9], "qubit": [5, 6, 7, 9], "quickstart": 9, "r": 7, "refer": 0, "regist": 1, "shift": 7, "simpl": 8, "singl": 7, "sqcl": 9, "step": 3, "summari": 7, "swap": 7, "test": [4, 9], "two": 7, "usag": 3, "x": 7, "y": 7, "z": 7}})